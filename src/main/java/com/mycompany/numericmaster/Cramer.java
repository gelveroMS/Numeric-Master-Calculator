package com.mycompany.numericmaster;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class Cramer extends javax.swing.JPanel {

    // Declare pointer to previous panel
    JPanel pointerToPreviousPanel;
    
    public Cramer() {
        initComponents();
        
        // Initialize pointer to previous panel
        pointerToPreviousPanel = null;
    }

    // gets the solution using cramer
    public void getSolution() {
        
        // parse the user input into a matrix
        double[][] matrix = {
            {Double.parseDouble(a1Input.getText()), 
                Double.parseDouble(b1Input.getText()), 
                Double.parseDouble(c1Input.getText()), 
                Double.parseDouble(d1Input.getText())},
            {Double.parseDouble(a2Input.getText()), 
                Double.parseDouble(b2Input.getText()), 
                Double.parseDouble(c2Input.getText()), 
                Double.parseDouble(d2Input.getText())},
            {Double.parseDouble(a3Input.getText()), 
                Double.parseDouble(b3Input.getText()), 
                Double.parseDouble(c3Input.getText()), 
                Double.parseDouble(d3Input.getText())}
        };
        
        double[] solution = cramerMethod(matrix);
        
        // displays the values of the solution
        // Check if the solution is NaN
        if (Double.isNaN(solution[0]) || Double.isNaN(solution[1]) || Double.isNaN(solution[2])) {
            JOptionPane.showMessageDialog(null, "The system of equations does not have a solution", "No solution", JOptionPane.ERROR_MESSAGE);
        } else {
            // displays the values of the solution
            xValue.setText(String.valueOf(solution[0]));
            yValue.setText(String.valueOf(solution[1]));
            zValue.setText(String.valueOf(solution[2]));
        }
    }
    
    public static double[] cramerMethod(double[][] matrix) {
        
        // Separate the main matrix and its submatrices
        double[][] matrixMain = getMainMatrix(matrix);
        double[][] matrixX = getXMatrix(matrix);
        double[][] matrixY = getYMatrix(matrix);
        double[][] matrixZ = getZMatrix(matrix);

        // Calculate determinants
        double mainDet = determinant(matrixMain);
        double xDet = determinant(matrixX);
        double yDet = determinant(matrixY);
        double zDet = determinant(matrixZ);

        // Calculate the values of x, y, and z
        double xValue = xDet / mainDet;
        double yValue = yDet / mainDet;
        double zValue = zDet / mainDet;

        // Return the solutions as an array
        return new double[]{xValue, yValue, zValue};
    }

    // Calculates the determinant of a 3x3 matrix.
    private static double determinant(double[][] matrix) {
        return Math.round((matrix[0][0] * (matrix[1][1] * matrix[2][2] - matrix[2][1] * matrix[1][2])
                          - matrix[0][1] * (matrix[1][0] * matrix[2][2] - matrix[2][0] * matrix[1][2])
                          + matrix[0][2] * (matrix[1][0] * matrix[2][1] - matrix[2][0] * matrix[1][1])));
    }

    // Extracts the main matrix (coefficient matrix) from the given 3x4 matrix
    private static double[][] getMainMatrix(double[][] matrix) {
        double[][] mainMatrix = new double[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                mainMatrix[i][j] = matrix[i][j];
            }
        }
        return mainMatrix;
    }

    // Extracts the X matrix from the given 3x4 matrix.
    private static double[][] getXMatrix(double[][] matrix) {
        double[][] xMatrix = {
            {matrix[0][3], matrix[0][1], matrix[0][2]},
            {matrix[1][3], matrix[1][1], matrix[1][2]},
            {matrix[2][3], matrix[2][1], matrix[2][2]}
        };
        return xMatrix;
    }

    // Extracts the y matrix from the given 3x4 matrix.
    private static double[][] getYMatrix(double[][] matrix) {
        double[][] yMatrix = {
            {matrix[0][0], matrix[0][3], matrix[0][2]},
            {matrix[1][0], matrix[1][3], matrix[1][2]},
            {matrix[2][0], matrix[2][3], matrix[2][2]}
        };
        return yMatrix;
    }

    // Extracts the z matrix from the given 3x4 matrix.
    private static double[][] getZMatrix(double[][] matrix) {
        double[][] zMatrix = {
            {matrix[0][0], matrix[0][1], matrix[0][3]},
            {matrix[1][0], matrix[1][1], matrix[1][3]},
            {matrix[2][0], matrix[2][1], matrix[2][3]}
        };
        return zMatrix;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userInputPanel = new javax.swing.JPanel();
        cramerBackLblBtn = new javax.swing.JLabel();
        a1Input = new javax.swing.JTextField();
        b1Input = new javax.swing.JTextField();
        c1Input = new javax.swing.JTextField();
        d1Input = new javax.swing.JTextField();
        a2Input = new javax.swing.JTextField();
        b2Input = new javax.swing.JTextField();
        c2Input = new javax.swing.JTextField();
        d2Input = new javax.swing.JTextField();
        d3Input = new javax.swing.JTextField();
        b3Input = new javax.swing.JTextField();
        c3Input = new javax.swing.JTextField();
        a3Input = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        getSolutionLblBtn = new javax.swing.JLabel();
        xValue = new javax.swing.JLabel();
        yValue = new javax.swing.JLabel();
        zValue = new javax.swing.JLabel();
        clearButton = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        userInputPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cramerBackLblBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BackBtn.png"))); // NOI18N
        cramerBackLblBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cramerBackLblBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cramerBackLblBtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cramerBackLblBtnMousePressed(evt);
            }
        });
        userInputPanel.add(cramerBackLblBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 660, -1, -1));

        a1Input.setPreferredSize(new java.awt.Dimension(80, 22));
        userInputPanel.add(a1Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 70, 30));

        b1Input.setPreferredSize(new java.awt.Dimension(80, 22));
        userInputPanel.add(b1Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 70, 30));

        c1Input.setPreferredSize(new java.awt.Dimension(80, 22));
        userInputPanel.add(c1Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, 70, 30));

        d1Input.setPreferredSize(new java.awt.Dimension(80, 22));
        userInputPanel.add(d1Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, -1, 30));

        a2Input.setPreferredSize(new java.awt.Dimension(80, 22));
        userInputPanel.add(a2Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 70, 30));

        b2Input.setPreferredSize(new java.awt.Dimension(80, 22));
        userInputPanel.add(b2Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 70, 30));

        c2Input.setPreferredSize(new java.awt.Dimension(80, 22));
        c2Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2InputActionPerformed(evt);
            }
        });
        userInputPanel.add(c2Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 70, 30));

        d2Input.setPreferredSize(new java.awt.Dimension(80, 22));
        userInputPanel.add(d2Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, -1, 30));

        d3Input.setPreferredSize(new java.awt.Dimension(80, 22));
        userInputPanel.add(d3Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 340, -1, 30));

        b3Input.setPreferredSize(new java.awt.Dimension(80, 22));
        userInputPanel.add(b3Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, 70, 30));

        c3Input.setPreferredSize(new java.awt.Dimension(80, 22));
        userInputPanel.add(c3Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, 70, 30));

        a3Input.setPreferredSize(new java.awt.Dimension(80, 22));
        userInputPanel.add(a3Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 70, 30));
        userInputPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 204, -1, -1));

        getSolutionLblBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getSolutionLblBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calculatebtnenter.png"))); // NOI18N
        getSolutionLblBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                getSolutionLblBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                getSolutionLblBtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                getSolutionLblBtnMousePressed(evt);
            }
        });
        userInputPanel.add(getSolutionLblBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 300, -1));

        xValue.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        xValue.setForeground(new java.awt.Color(255, 255, 255));
        xValue.setText("X");
        userInputPanel.add(xValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 500, 130, 20));

        yValue.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        yValue.setForeground(new java.awt.Color(255, 255, 255));
        yValue.setText("Y");
        userInputPanel.add(yValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 500, 130, 20));

        zValue.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        zValue.setForeground(new java.awt.Color(255, 255, 255));
        zValue.setText("Z");
        userInputPanel.add(zValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 500, 140, 20));

        clearButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ClearBtnenter.png"))); // NOI18N
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clearButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clearButtonMousePressed(evt);
            }
        });
        userInputPanel.add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 410, 140, -1));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/CRAMERS CALCULATOR.png"))); // NOI18N
        jLabel19.setText("jLabel19");
        userInputPanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1270, 730));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userInputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userInputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void setPointerToPreviousPanel(MethodSelection panel) {
        pointerToPreviousPanel = panel;
    }
    
    private void cramerBackLblBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cramerBackLblBtnMousePressed
        
        // clears the input fields
        JTextField[] inputFields = {a1Input, b1Input, c1Input, d1Input,
            a2Input, b2Input, c2Input, d2Input,
            a3Input, b3Input, c3Input, d3Input};
        
        for(JTextField inputField:inputFields) {
            inputField.setText("");
        }
        
        JLabel[] rootDisplays = {xValue, yValue, zValue};
        for (JLabel rootDisplay:rootDisplays) {
            rootDisplay.setText("");
        }
        
        // hides this panel and show the method selection panel
        setVisible(false);
        pointerToPreviousPanel.setVisible(true);
    }//GEN-LAST:event_cramerBackLblBtnMousePressed

    private void getSolutionLblBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getSolutionLblBtnMousePressed
        if (!Exhandling.emptyFieldsCheck(a1Input.getText(), b1Input.getText(), c1Input.getText(), d1Input.getText(),
                            a2Input.getText(), b2Input.getText(), c2Input.getText(), d2Input.getText(),
                            a3Input.getText(), b3Input.getText(), c3Input.getText(), d3Input.getText())){
            return;
        }
         if (!Exhandling.doubleCheck(a1Input.getText(), b1Input.getText(), c1Input.getText(), d1Input.getText(),
                            a2Input.getText(), b2Input.getText(), c2Input.getText(), d2Input.getText(),
                            a3Input.getText(), b3Input.getText(), c3Input.getText(), d3Input.getText())) {
             return;
        }

        // get the solution and display it on the screen
        getSolution();
    }//GEN-LAST:event_getSolutionLblBtnMousePressed

    private void clearButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMousePressed
        // TODO add your handling code here:
        JTextField[] inputFields = {a1Input, b1Input, c1Input, d1Input,
            a2Input, b2Input, c2Input, d2Input,
            a3Input, b3Input, c3Input, d3Input};
        
        for(JTextField inputField:inputFields) {
            inputField.setText("");
        }
    }//GEN-LAST:event_clearButtonMousePressed

    private void c2InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2InputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c2InputActionPerformed

    private void getSolutionLblBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getSolutionLblBtnMouseExited
        // TODO add your handling code here:
        getSolutionLblBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calculatebtn.png"))); // NOI18N
    }//GEN-LAST:event_getSolutionLblBtnMouseExited

    private void getSolutionLblBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getSolutionLblBtnMouseEntered
        // TODO add your handling code here:
        getSolutionLblBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calculatebtnenter.png"))); // NOI18N
    }//GEN-LAST:event_getSolutionLblBtnMouseEntered

    private void clearButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseExited
        // TODO add your handling code here:
        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ClearBtn.png"))); // NOI18N
    }//GEN-LAST:event_clearButtonMouseExited

    private void clearButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseEntered
        // TODO add your handling code here:
        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ClearBtnenter.png"))); // NOI18N
    }//GEN-LAST:event_clearButtonMouseEntered

    private void cramerBackLblBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cramerBackLblBtnMouseExited
        // TODO add your handling code here:
        cramerBackLblBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BackBtn.png"))); // NOI18N
    }//GEN-LAST:event_cramerBackLblBtnMouseExited

    private void cramerBackLblBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cramerBackLblBtnMouseEntered
        // TODO add your handling code here:
        cramerBackLblBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BackBtnenter.png"))); // NOI18N
    }//GEN-LAST:event_cramerBackLblBtnMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a1Input;
    private javax.swing.JTextField a2Input;
    private javax.swing.JTextField a3Input;
    private javax.swing.JTextField b1Input;
    private javax.swing.JTextField b2Input;
    private javax.swing.JTextField b3Input;
    private javax.swing.JTextField c1Input;
    private javax.swing.JTextField c2Input;
    private javax.swing.JTextField c3Input;
    private javax.swing.JLabel clearButton;
    private javax.swing.JLabel cramerBackLblBtn;
    private javax.swing.JTextField d1Input;
    private javax.swing.JTextField d2Input;
    private javax.swing.JTextField d3Input;
    private javax.swing.JLabel getSolutionLblBtn;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JPanel userInputPanel;
    private javax.swing.JLabel xValue;
    private javax.swing.JLabel yValue;
    private javax.swing.JLabel zValue;
    // End of variables declaration//GEN-END:variables
}
